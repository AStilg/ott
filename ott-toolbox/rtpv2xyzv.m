function [xv,yv,zv,x,y,z] = rtpv2xyzv(rv,thetav,phiv,r,theta,phi)% rtpv2xyzv.m : convert a vector field of vector values at%               points from spherical to cartesian%% Usage:% [xv,yv,zv,x,y,z] = rtpv2xyzv(rv,thetav,phiv,r,theta,phi)% or% [vec_cart,pos_cart] = rtpv2xyzv(vec,pos)%% This file is part of the package Optical tweezers toolbox 1.0.1
% Copyright 2006-2007 The University of Queensland.
% See README.txt or README.m for license and details.
%
% http://www.physics.uq.edu.au/people/nieminen/software.htmlif nargin < 6   r = thetav(:,1);   theta = thetav(:,2);   phi = thetav(:,3);   phiv = rv(:,3);   thetav = rv(:,2);   rv = rv(:,1);end% Convert points to cartesian coordinates[x,y,z] = rtp2xyz(r,theta,phi);% Convert the vector fieldtheta_hat_x = cos(theta) .* cos(phi);theta_hat_y = cos(theta) .* sin(phi);theta_hat_z = -sin(theta);phi_hat_x = -sin(phi);phi_hat_y = cos(phi);phi_hat_z = 0;r_hat_x = x./r;r_hat_y = y./r;r_hat_z = z./r;xv = rv .* r_hat_x + thetav .* theta_hat_x + phiv .* phi_hat_x;yv = rv .* r_hat_y + thetav .* theta_hat_y + phiv .* phi_hat_y;zv = rv .* r_hat_z + thetav .* theta_hat_z + phiv .* phi_hat_z;if nargout < 3   xv = [ xv yv zv ];   yv = [ x y z ];endreturn