function [rv,thetav,phiv,r,theta,phi] = xyzv2rtpv(xv,yv,zv,x,y,z)% rtpv2xyzv.m : convert a vector field of vector values at%               points from cartesian to spherical%% Usage:% [rv,thetav,phiv,r,theta,phi] = rtpv2xyzv(xv,yv,zv,x,y,z)% or% [vec_sph,pos_sph] = rtpv2xyzv(vec_cart,pos_cart)%% This file is part of the package Optical tweezers toolbox 1.0
% Copyright 2006 The University of Queensland.
% See README.txt or README.m for license and details.
%
% http://www.physics.uq.edu.au/people/nieminen/software.htmlif nargin < 6   x = yv(:,1);   y = yv(:,2);   z = yv(:,3);   zv = xv(:,3);   yv = xv(:,2);   xv = xv(:,1);end% Convert points to spherical coordinates%[x,y,z] = rtp2xyz(r,theta,phi);[r,theta,phi] = xyz2rtp(x,y,z);% Convert the vector fieldx_hat_r = sin(theta).*cos(phi);x_hat_theta = cos(theta).*cos(phi);x_hat_phi = sin(phi);y_hat_r = sin(theta).*sin(phi);y_hat_theta = cos(theta).*sin(phi);y_hat_phi = cos(phi);z_hat_r = cos(theta);z_hat_theta = -sin(theta);z_hat_phi = 0;% % theta_hat_x = cos(theta) .* cos(phi);% theta_hat_y = cos(theta) .* sin(phi);% theta_hat_z = -sin(theta);% phi_hat_x = -sin(phi);% phi_hat_y = cos(phi);% phi_hat_z = 0;% r_hat_x = x./r;% r_hat_y = y./r;% r_hat_z = z./r;rv = xv .* x_hat_r + yv .* y_hat_r + zv .* z_hat_r;thetav = xv .* x_hat_theta + yv .* y_hat_theta + zv .* z_hat_theta;phiv = xv .* x_hat_phi + yv .* y_hat_phi + zv .* z_hat_phi;% % xv = rv .* r_hat_x + thetav .* theta_hat_x + phiv .* phi_hat_x;% yv = rv .* r_hat_y + thetav .* theta_hat_y + phiv .* phi_hat_y;% zv = rv .* r_hat_z + thetav .* theta_hat_z + phiv .* phi_hat_z;if nargout < 3   rv = [ rv thetav phiv ];   thetav = [ r theta phi ];endreturn